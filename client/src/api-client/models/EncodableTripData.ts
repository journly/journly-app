/* tslint:disable */
/* eslint-disable */
/**
 * journly-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EncodableCollaborator } from './EncodableCollaborator';
import {
    EncodableCollaboratorFromJSON,
    EncodableCollaboratorFromJSONTyped,
    EncodableCollaboratorToJSON,
    EncodableCollaboratorToJSONTyped,
} from './EncodableCollaborator';
import type { EncodableBudgetPlan } from './EncodableBudgetPlan';
import {
    EncodableBudgetPlanFromJSON,
    EncodableBudgetPlanFromJSONTyped,
    EncodableBudgetPlanToJSON,
    EncodableBudgetPlanToJSONTyped,
} from './EncodableBudgetPlan';
import type { EncodableDocument } from './EncodableDocument';
import {
    EncodableDocumentFromJSON,
    EncodableDocumentFromJSONTyped,
    EncodableDocumentToJSON,
    EncodableDocumentToJSONTyped,
} from './EncodableDocument';
import type { EncodableItineraryItem } from './EncodableItineraryItem';
import {
    EncodableItineraryItemFromJSON,
    EncodableItineraryItemFromJSONTyped,
    EncodableItineraryItemToJSON,
    EncodableItineraryItemToJSONTyped,
} from './EncodableItineraryItem';

/**
 * 
 * @export
 * @interface EncodableTripData
 */
export interface EncodableTripData {
    /**
     * 
     * @type {string}
     * @memberof EncodableTripData
     */
    bannerImage?: string | null;
    /**
     * 
     * @type {EncodableBudgetPlan}
     * @memberof EncodableTripData
     */
    budgetPlan: EncodableBudgetPlan;
    /**
     * 
     * @type {Array<EncodableCollaborator>}
     * @memberof EncodableTripData
     */
    collaborators: Array<EncodableCollaborator>;
    /**
     * 
     * @type {Array<EncodableDocument>}
     * @memberof EncodableTripData
     */
    documents: Array<EncodableDocument>;
    /**
     * 
     * @type {Date}
     * @memberof EncodableTripData
     */
    endDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof EncodableTripData
     */
    id: string;
    /**
     * 
     * @type {Array<EncodableItineraryItem>}
     * @memberof EncodableTripData
     */
    itinerary: Array<EncodableItineraryItem>;
    /**
     * 
     * @type {Date}
     * @memberof EncodableTripData
     */
    startDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof EncodableTripData
     */
    title?: string | null;
}

/**
 * Check if a given object implements the EncodableTripData interface.
 */
export function instanceOfEncodableTripData(value: object): value is EncodableTripData {
    if (!('budgetPlan' in value) || value['budgetPlan'] === undefined) return false;
    if (!('collaborators' in value) || value['collaborators'] === undefined) return false;
    if (!('documents' in value) || value['documents'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('itinerary' in value) || value['itinerary'] === undefined) return false;
    return true;
}

export function EncodableTripDataFromJSON(json: any): EncodableTripData {
    return EncodableTripDataFromJSONTyped(json, false);
}

export function EncodableTripDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncodableTripData {
    if (json == null) {
        return json;
    }
    return {
        
        'bannerImage': json['banner_image'] == null ? undefined : json['banner_image'],
        'budgetPlan': EncodableBudgetPlanFromJSON(json['budget_plan']),
        'collaborators': ((json['collaborators'] as Array<any>).map(EncodableCollaboratorFromJSON)),
        'documents': ((json['documents'] as Array<any>).map(EncodableDocumentFromJSON)),
        'endDate': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'id': json['id'],
        'itinerary': ((json['itinerary'] as Array<any>).map(EncodableItineraryItemFromJSON)),
        'startDate': json['start_date'] == null ? undefined : (new Date(json['start_date'])),
        'title': json['title'] == null ? undefined : json['title'],
    };
}

export function EncodableTripDataToJSON(json: any): EncodableTripData {
    return EncodableTripDataToJSONTyped(json, false);
}

export function EncodableTripDataToJSONTyped(value?: EncodableTripData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'banner_image': value['bannerImage'],
        'budget_plan': EncodableBudgetPlanToJSON(value['budgetPlan']),
        'collaborators': ((value['collaborators'] as Array<any>).map(EncodableCollaboratorToJSON)),
        'documents': ((value['documents'] as Array<any>).map(EncodableDocumentToJSON)),
        'end_date': value['endDate'] == null ? undefined : ((value['endDate'] as any).toISOString().substring(0,10)),
        'id': value['id'],
        'itinerary': ((value['itinerary'] as Array<any>).map(EncodableItineraryItemToJSON)),
        'start_date': value['startDate'] == null ? undefined : ((value['startDate'] as any).toISOString().substring(0,10)),
        'title': value['title'],
    };
}

